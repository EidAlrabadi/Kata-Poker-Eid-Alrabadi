package poker;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Card {

	private String hand;
	private int value;
	private char suite;

	public Card(String hand, int value, char suite) {
		super();
		this.hand = hand;
		this.value = value;
		this.suite = suite;
	}

	public Card(String hand, char suite) {
		this.hand = hand;
		this.suite = suite;
	}

	public Card(int value, char suite) {
		this.value = value;
		this.suite = suite;
	}

	public Card(int value, String hand) {
		this.value = value;
		this.hand = hand;
	}

	public Card() {
		// TODO Auto-generated constructor stub
	}

	public String getHand() {
		return hand;
	}

	public void setHand(String hand) {
		this.hand = hand;
	}

	public int getValue() {
		return value;
	}

	public void setValue(int value) {
		this.value = value;
	}

	public char getSuite() {
		return suite;
	}

	public void setSuite(char suite) {
		this.suite = suite;
	}

	/**
	 * 
	 * @param userInput
	 * 
	 * 
	 *                  This is a method that takes a string from the user, in the
	 *                  specified format and generates an array holding 10 'card'
	 *                  objects. generated by parsing the string from the user.
	 * 
	 * 
	 */
	public ArrayList<Card> generateCards(String userInput) {
		ArrayList<Card> ret = new ArrayList<Card>(); // The returned arraylist
		for (int i = 7; i < userInput.length(); i++) { // start at the 7th character since that is the first card in our
														// string
			char currentChar = userInput.charAt(i); // grab the current character

			char secondChar = userInput.charAt(i + 1); // grab the next character

			if (!Character.isDigit(currentChar) && currentChar != 'A' && currentChar != 'J' && currentChar != 'Q'
					&& currentChar != 'K') {
				i = 29; // if it's not a number, jack, queen or king, then we skip to the next hand
			} else if (Character.isDigit(currentChar) && Character.isDigit(secondChar)) {
				Card c = new Card(10, userInput.charAt(i + 2)); // if the first two characters are integers it's a 10.
																// the only double digit

				ret.add(c);
				i += 3; // adds 3 to move to the next card index in the string

			} else if (Character.isDigit(currentChar)) { // adds cards that are a digit and a suite
				Card c = new Card(Character.getNumericValue(currentChar), userInput.charAt(i + 1));

				ret.add(c);
				i += 2; // adds 2 to move to the next card index in the sting

			} else { // If character is not a digit it is either Ace,Jack,Queen,King
				if (currentChar == 'A') {
					Card c = new Card(14, userInput.charAt(i + 1));
					ret.add(c);
					i += 2;
				} else if (currentChar == 'J') {
					Card c = new Card(11, userInput.charAt(i + 1));

					ret.add(c);
					i += 2;
				} else if (currentChar == 'Q') {
					Card c = new Card(12, userInput.charAt(i + 1));

					ret.add(c);
					i += 2;
				} else if (currentChar == 'K') {
					Card c = new Card(13, userInput.charAt(i + 1));

					ret.add(c);
					i += 2;
				}
			}
			
		

		}

		return ret;

	}
	
	

}
